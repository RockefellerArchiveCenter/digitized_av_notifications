AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  digitized-av-notifications

  Handles notifications for validation and packaging of incoming digitized audiovisual assets.

Globals:
  Function:
    Timeout: 3

Parameters:
  TeamsUrl:
    Type: String
    Description: The encrypted URL of an incoming webhook for a Teams channel to which notifications should be posted.
  SnsTopicName:
    Type: String
    Default: digitized-av-events
    Description: Name of SNS topic to trigger Lambda
  LambdaName:
    Type: String
    Default: digitized_av_notifications
    Description: Name of Lambda function

Resources:
  HandleDigitizedAVNotificationsRole:
    Type: AWS::IAM::Role
    Properties: 
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      Description: !Sub 'Allows ${LambdaName} lambda to be executed successfully.'
      Policies: 
        - PolicyName: ExecutionPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action: 'logs:CreateLogGroup'
                Resource: !Sub 'arn:aws:logs:${AWS::Region}:${AWS::AccountId}:*'
              - Effect: Allow
                Action: 
                  - 'logs:CreateLogStream'
                  - 'logs:PutLogEvents'
                Resource: !Sub 'arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/${LambdaName}:*'
              - Effect: Allow
                Action: 'kms:Decrypt'
                Resource: !Sub 'arn:aws:kms:${AWS::Region}:${AWS::AccountId}:key/5be10a8b-c0cb-4d4a-89f1-3577380a2d8b'
                Condition:
                  StringEquals:
                    'kms:EncryptionContext:LambdaFunctionName': !Ref LambdaName
      RoleName: !Sub '${LambdaName}_role'
  DigitizedAVEventsTopic:
      Type: AWS::SNS::Topic
      Properties:
        TopicName: !Ref SnsTopicName
  HandleDigitizedAVNotificationsFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ./src
      Handler: handle_digitized_av_notifications.lambda_handler
      FunctionName: !Ref LambdaName
      Runtime: python3.9
      Role: !GetAtt HandleDigitizedAVNotificationsRole.Arn
      Timeout: 10
      Architectures:
        - x86_64
      Environment:
        Variables:
          TEAMS_URL:
            Ref: TeamsUrl
      Events:
        DigitizedAVEventsTopic:
          Type: SNS
          Properties:
            Topic: !Ref DigitizedAVEventsTopic

Outputs:
  HandleDigitizedAVNotificationsFunction:
    Description: 'Handle Digitized AV Notifications Lambda Function ARN'
    Value: !GetAtt HandleDigitizedAVNotificationsFunction.Arn
  DigitizedAVEventsTopic:
    Description: 'Digitized AV Events SNS Topic ARN'
    Value: !GetAtt DigitizedAVEventsTopic.TopicArn
    Export:
      Name:
        DigitizedAV-SNSTopicArn