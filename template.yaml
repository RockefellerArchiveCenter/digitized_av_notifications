AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  digitized-av-notifications

  Handles notifications for validation and packaging of incoming digitized audiovisual assets.

Globals:
  Function:
    Timeout: 3

Parameters:
  ApplicationEnvironment:
    Type: String
    Description: The environment in which the application should be deployed.
    AllowedValues:
      - dev
      - prod
    Default: dev
  ApplicationName:
    Type: String
    Description: The name of the application to be deployed.
    Default: digitized-av-notifications
  LambdaName:
    Type: String
    Default: digitized_av_notifications
    Description: Name of Lambda function
  TeamsUrl:
    Type: String
    Description: URL for a Teams channel webhook.

Resources:
  HandleDigitizedAVNotificationsRole:
    Type: AWS::IAM::Role
    Properties: 
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      Description: !Sub 'Allows ${LambdaName} lambda to be executed successfully.'
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      Policies:
        - PolicyName: DigitizedAVParameterStorePolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action: 
                  - 'ssm:GetParametersByPath*'
                Resource: !Sub 'arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${ApplicationEnvironment}/${ApplicationName}*'
      RoleName: !Sub '${LambdaName}_role'
  
  DigitizedAVEventsTopic:
      Type: AWS::SNS::Topic
      Properties:
        TopicName: digitized-av-events

  TeamsUrlParameter:
    Type: AWS::SSM::Parameter
    Properties: 
      Description: URL for Teams Channel webhook.
      Name: !Sub /${ApplicationEnvironment}/${ApplicationName}/TEAMS_URL
      Tags: 
        Environment: !Ref ApplicationEnvironment
        Application: !Ref ApplicationName
      Type: String
      Value: !Ref TeamsUrl
  
  HandleDigitizedAVNotificationsFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ./src
      Handler: handle_digitized_av_notifications.lambda_handler
      FunctionName: !Ref LambdaName
      Runtime: python3.9
      Role: !GetAtt HandleDigitizedAVNotificationsRole.Arn
      Timeout: 10
      Architectures:
        - x86_64
      Environment:
        Variables:
          ENV:
            Ref: ApplicationEnvironment
          APP_CONFIG_PATH:
            Ref: ApplicationName
      Events:
        DigitizedAVEventsTopic:
          Type: SNS
          Properties:
            Topic: !Ref DigitizedAVEventsTopic

Outputs:
  HandleDigitizedAVNotificationsFunction:
    Description: 'Handle Digitized AV Notifications Lambda Function ARN'
    Value: !GetAtt HandleDigitizedAVNotificationsFunction.Arn
  DigitizedAVEventsTopic:
    Description: 'Digitized AV Events SNS Topic ARN'
    Value: !GetAtt DigitizedAVEventsTopic.TopicArn
    Export:
      Name:
        DigitizedAV-SNSTopicArn